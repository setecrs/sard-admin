name: ci-cd

on: ['push']


env:
  REPO: setecrs/sard-admin
  FOLDER: .
  VERSION: ${GITHUB_REF#refs/tags/}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: python3 -m pip install -r requirements.txt
        run: python3 -m pip install -r requirements.txt

      - name: python3 -m unittest -v
        run: python3 -m unittest -v

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: docker-compose build
        run: docker-compose build
        working-directory: ./tests

      - name: docker-compose up --abort-on-container-exit
        run: docker-compose up --abort-on-container-exit
        working-directory: ./tests
  version:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    
    - name: check if the version in setup.py matches the tag
      run: grep -qF "version='${{env.VERSION}}'" setup.py

  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '.yml')
    steps:
    - uses: actions/checkout@v2
      
    - name: Docker login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
      
    - name: pull latest (for cache)
      run: docker pull ${{env.REPO}}:latest || echo could not pull
      
    - name: Docker build latest
      run: docker build --cache-from ${{env.REPO}}:latest ${{env.FOLDER}} -t ${{env.REPO}}:latest
      
    - name: Docker push latest
      run: docker push ${{env.REPO}}:latest
      
    - name: Docker push - semver
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        docker tag ${{env.REPO}}:latest ${{env.REPO}}:${{env.VERSION}}
        docker push ${{env.REPO}}:${{env.VERSION}}
