name: sard-admin_ci-cd

on: ['push']

env:
  REPO: setecrs/sard-admin
  FOLDER: sard-admin
  VERSION: ${GITHUB_REF#refs/tags/sard-admin_}

jobs:
  bare-unit-tests:
    if: startsWith(github.ref, 'refs/tags/sard-admin_')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - run: python3 -m pip install -r requirements.txt
        working-directory: ./${{env.FOLDER}}

      - run: python3 -m unittest -v
        working-directory: ./${{env.FOLDER}}

  unit-tests:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: docker-compose up --abort-on-container-exit unit-tests
        working-directory: ./${{env.FOLDER}}/tests

  system-tests:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    steps:
      - uses: actions/checkout@v2

      - run: docker-compose up -d ldap
        working-directory: ./${{env.FOLDER}}/tests
      
      - run: sleep 5

      - run: docker-compose up -d api
        working-directory: ./${{env.FOLDER}}/tests

      - run: sleep 3

      - run: docker-compose up --abort-on-container-exit system-tests
        working-directory: ./${{env.FOLDER}}/tests

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - bare-unit-tests
      - unit-tests
      - system-tests
    steps:
      - uses: actions/checkout@v2

      - name: pull latest (for cache)
        run: docker pull ${{env.REPO}}:latest || echo could not pull

      - name: Docker build latest
        run: docker build --cache-from ${{env.REPO}}:latest ${{env.FOLDER}} -t ${{env.REPO}}:latest
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
        
      - name: Docker push latest
        run: docker push ${{env.REPO}}:latest
        
      - name: Docker push - semver
        run: |
          docker tag ${{env.REPO}}:latest ${{env.REPO}}:${{env.VERSION}}
          docker push ${{env.REPO}}:${{env.VERSION}}

